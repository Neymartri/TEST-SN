{"ast":null,"code":"var _jsxFileName = \"/Users/EthanTran/Desktop/Squid-Note/src/routes/EventDetailPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EventFinder from '../apis/EventFinder';\nimport AddReview from '../components/AddReview';\nimport Reviews from '../components/Reviews';\nimport StarRating from '../components/StarRating';\nimport { EventsContext } from '../context/EventsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EventDetailPage = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    selectedEvent,\n    setSelectedEvent\n  } = useContext(EventsContext); //fetch a particular event name and render it on eventDetailPage via api\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await EventFinder.get(`/${id}`);\n        setSelectedEvent(response.data.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []); //only render event name when event name is selected\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedEvent && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center display-1 text-capitalize\",\n        children: selectedEvent.event.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(StarRating, {\n          rating: selectedEvent.event.average_rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Reviews, {\n          reviews: selectedEvent.reviews\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-warning ml-1\",\n          children: \"selectedEvent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddReview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventDetailPage, \"BGVc4xK+GRL+gT9u6VCNLtdSfjE=\", false, function () {\n  return [useParams];\n});\n\n_c = EventDetailPage;\nexport default EventDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"sources":["/Users/EthanTran/Desktop/Squid-Note/src/routes/EventDetailPage.jsx"],"names":["React","useContext","useEffect","useParams","EventFinder","AddReview","Reviews","StarRating","EventsContext","EventDetailPage","id","selectedEvent","setSelectedEvent","fetchData","response","get","data","err","console","log","event","name","average_rating","reviews"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAOP,SAAS,EAAtB;AACA,QAAM;AAACQ,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAAoCX,UAAU,CAACO,aAAD,CAApD,CAF0B,CAI1B;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAG,YAAY;AAE1B,UAAI;AACJ,cAAMC,QAAQ,GAAG,MAAMV,WAAW,CAACW,GAAZ,CAAiB,IAAGL,EAAG,EAAvB,CAAvB;AAEAE,QAAAA,gBAAgB,CAACE,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAhB;AACC,OAJD,CAIE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KATD;;AAWAJ,IAAAA,SAAS;AACZ,GAbQ,EAaN,EAbM,CAAT,CAL0B,CAoB1B;;AACA,sBACI;AAAA,cACKF,aAAa,iBACV;AAAA,8BACA;AAAI,QAAA,SAAS,EAAE,uCAAf;AAAA,kBAAwDA,aAAa,CAACS,KAAd,CAAoBC;AAA5E;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,MAAM,EAAEV,aAAa,CAACS,KAAd,CAAoBE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHA,eAMA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,OAAO,EAAEX,aAAa,CAACY;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAYA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAZA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAzCD;;GAAMd,e;UACWN,S;;;KADXM,e;AA2CN,eAAeA,eAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EventFinder from '../apis/EventFinder';\nimport AddReview from '../components/AddReview';\nimport Reviews from '../components/Reviews';\nimport StarRating from '../components/StarRating';\nimport { EventsContext } from '../context/EventsContext';\n\nconst EventDetailPage = () => {\n    const {id} = useParams();\n    const {selectedEvent, setSelectedEvent} = useContext(EventsContext)\n\n    //fetch a particular event name and render it on eventDetailPage via api\n    useEffect(() => {\n        const fetchData = async () => {\n\n            try {\n            const response = await EventFinder.get(`/${id}`);\n\n            setSelectedEvent(response.data.data);\n            } catch (err) {\n                console.log(err)\n            }\n        };\n\n        fetchData()\n    }, []);\n\n    //only render event name when event name is selected\n    return (\n        <div>\n            {selectedEvent && (\n                <>\n                <h1 className =\"text-center display-1 text-capitalize\">{selectedEvent.event.name}</h1>\n                {/* Reviews has access to events and reviews */}\n                <div className=\"text-center\">\n                    <StarRating rating={selectedEvent.event.average_rating} />\n                </div>\n                <div className=\"mt-3\">\n                    <Reviews reviews={selectedEvent.reviews}/>\n                    <span className=\"text-warning ml-1\">\n                        selectedEvent\n                    </span>\n                </div>\n                <AddReview/>\n                </>\n            )}\n        </div>\n    )\n};\n\nexport default EventDetailPage;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/EthanTran/Desktop/Squid-Note/src/routes/EventDetailPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EventFinder from '../apis/EventFinder';\nimport { EventsContext } from '../context/EventsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventDetailPage = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    selectedEvent,\n    setSelectedEvent\n  } = useContext(EventsContext); //fetch a particular event name and render it on eventDetailPage via api\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await EventFinder.get(`/${id}`);\n        setSelectedEvent(response.data.data.event);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []); //only render event name when event name is selected\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedEvent && star\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventDetailPage, \"BGVc4xK+GRL+gT9u6VCNLtdSfjE=\", false, function () {\n  return [useParams];\n});\n\n_c = EventDetailPage;\nexport default EventDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"sources":["/Users/EthanTran/Desktop/Squid-Note/src/routes/EventDetailPage.jsx"],"names":["React","useContext","useEffect","useParams","EventFinder","EventsContext","EventDetailPage","id","selectedEvent","setSelectedEvent","fetchData","response","get","data","event","err","console","log","star"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;AACA,QAAM;AAACK,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAAoCR,UAAU,CAACI,aAAD,CAApD,CAF0B,CAI1B;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,SAAS,GAAG,YAAY;AAE1B,UAAI;AACJ,cAAMC,QAAQ,GAAG,MAAMP,WAAW,CAACQ,GAAZ,CAAiB,IAAGL,EAAG,EAAvB,CAAvB;AACAE,QAAAA,gBAAgB,CAACE,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBC,KAApB,CAAhB;AACC,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KARD;;AAUAL,IAAAA,SAAS;AACZ,GAZQ,EAYN,EAZM,CAAT,CAL0B,CAmB1B;;AACA,sBACI;AAAA,cACKF,aAAa,IAAIU;AADtB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzBD;;GAAMZ,e;UACWH,S;;;KADXG,e;AA2BN,eAAeA,eAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EventFinder from '../apis/EventFinder';\nimport { EventsContext } from '../context/EventsContext';\n\nconst EventDetailPage = () => {\n    const {id} = useParams();\n    const {selectedEvent, setSelectedEvent} = useContext(EventsContext)\n\n    //fetch a particular event name and render it on eventDetailPage via api\n    useEffect(() => {\n        const fetchData = async () => {\n\n            try {\n            const response = await EventFinder.get(`/${id}`);\n            setSelectedEvent(response.data.data.event);\n            } catch (err) {\n                console.log(err)\n            }\n        };\n\n        fetchData()\n    }, []);\n\n    //only render event name when event name is selected\n    return (\n        <div>\n            {selectedEvent && star}\n        </div>\n    )\n};\n\nexport default EventDetailPage;\n"]},"metadata":{},"sourceType":"module"}
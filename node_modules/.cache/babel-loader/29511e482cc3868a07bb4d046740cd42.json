{"ast":null,"code":"var _jsxFileName = \"/Users/EthanTran/Desktop/Squid-Note/src/components/AddReview.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport EventFinder from '../apis/EventFinder'; // Create a user input for reviews of the selected event\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddReview = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const [reviewText, setReviewText] = useState(\"\");\n  const [rating, setRating] = useState(\"Rating\");\n\n  const handleSubmitReview = e => {\n    e.preventDefault();\n    EventFinder.post(`/${id}/addReview`, {\n      name,\n      review: reviewText,\n      rating\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-2\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: e => setName(e.target.value),\n            id: \"name\",\n            placeholder: \"name\",\n            type: \"text\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rating\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: rating,\n            onChange: e => setRating(e.target.value),\n            id: \"rating\",\n            className: \"custom-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Review\",\n          children: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: reviewText,\n          onChange: e => setReviewText(e.target.value),\n          id: \"Review\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmitReview,\n        className: \"btn btn-primary\",\n        children: \"Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddReview, \"W48yy8MAm58+g7QaSPNekp95l2E=\", false, function () {\n  return [useParams];\n});\n\n_c = AddReview;\nexport default AddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"sources":["/Users/EthanTran/Desktop/Squid-Note/src/components/AddReview.jsx"],"names":["React","useState","useLocation","useParams","EventFinder","AddReview","id","name","setName","reviewText","setReviewText","rating","setRating","handleSubmitReview","e","preventDefault","post","review","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport EventFinder from '../apis/EventFinder';\n\n// Create a user input for reviews of the selected event\nconst AddReview = () => {\n    const { id } = useParams(); \n    const [name, setName] = useState(\"\")\n    const [reviewText, setReviewText] = useState(\"\")\n    const [rating, setRating] = useState(\"Rating\")\n\n    const handleSubmitReview =  (e) => {\n        e.preventDefault()\n        EventFinder.post(`/${id}/addReview`, {\n            name,\n            review: reviewText,\n            rating\n        })\n    };\n    return (\n        <div className=\"mb-2\">\n            <form action = \"\">\n                <div className=\"form-row\">\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input value ={name} onChange={e => setName(e.target.value)} id=\"name\" placeholder=\"name\" type=\"text\" className=\"form-control\" />\n                    </div>\n                    <div className=\"form-group col-4\">\n                        <label htmlFor=\"rating\">Rating</label>\n                        <select value ={rating} onChange={e => setRating(e.target.value)} id=\"rating\" className=\"custom-select\">\n                            <option disabled>Rating</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"Review\">Review</label>\n                    <textarea value ={reviewText} onChange={e => setReviewText(e.target.value)}id=\"Review\" className=\"form-control\"></textarea>\n                </div>\n                <button type= \"submit\" onClick={handleSubmitReview} className=\"btn btn-primary\">Submit </button>\n            </form>\n        </div>\n    );\n};\n\nexport default AddReview;\n"]},"metadata":{},"sourceType":"module"}